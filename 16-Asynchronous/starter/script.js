'use strict';

const btn = document.querySelector('.btn-country');
const countriesContainer = document.querySelector('.countries');
//whereAmI v2
//=============================================
// const renderError = function (mag) {
//     countriesContainer.insertAdjacentText('beforeend', mag); // ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö‡∏≠‡∏¥‡∏ô‡πÄ‡∏™‡∏¥‡∏ä‡πÅ‡∏ï‡πà‡∏ß‡πà‡∏≤‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ‡πÄ‡∏≠‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏Ñ‡πà‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏¢‡∏±‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÄ‡∏•‡∏¢
//     // countriesContainer.style.opacity = 1;
// }
// const getJSON = function (url, errMsg = 'Something went wrong') {
//     return fetch(url).then(response => { // ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡∏ñ‡πâ‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ function ‡∏Ç‡∏≠‡∏á then ‡πÑ‡∏î‡πâ
//         if (!response.ok) throw new Error(`${errMsg} (${response.status})`)
//         return response.json();
//     })

// }

// const getCountData = function (country) { // use arrow function

//     getJSON(`https://restcountries.com/v2/name/${country}`)
//         .then(data => {
//             renderCountry(...data)
//             const neighbour = data[0].borders?.[0];
//             if (!neighbour) throw new Error('No neighbour found!')
//             //Country 2
//             return getJSON(`https://restcountries.com/v2/alpha/${neighbour}`)

//             // fetch(`https://restcountries.com/v2/alpha/${neighbour}`).then(respones => ) //‡∏´‡πâ‡∏≤‡∏°‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö the hell ‡∏ô‡∏µ‡πà‡πÄ‡∏î‡πá‡∏î‡∏Ç‡∏≤‡∏î ‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ

//         })
//         // .then(respones => respones.json()) //‡πÄ‡∏≠‡∏≤‡∏°‡∏≤‡∏ï‡πà‡∏≠‡∏Ç‡πâ‡∏≤‡∏á‡∏ô‡∏≠‡∏Å
//         .then(data => renderCountry(data, 'neighbour'))
//         .catch(err => {
//             console.error(err) //‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏£‡∏≠‡∏ö‡∏™‡∏µ‡πÅ‡∏î‡∏á ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£ throw method ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏£‡∏π‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà catch ‡∏£‡∏±‡∏ö
//             renderError(`Something went wrong. ${err.message} Please try again.`)

//         })// ‡∏à‡∏±‡∏ö error ‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß‡πÉ‡∏ô‡∏´‡πà‡∏ß‡∏á‡πÇ‡∏ã‡πà
//         .finally(() => {
//             countriesContainer.style.opacity = 1; // ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏¥‡∏î‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏™‡∏°‡∏≠ ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞ do ‡∏ï‡∏•‡∏≠‡∏î
//         })
// }
// const renderCountry = function (data, className = '') {
//     const html = `
//     <article class="country ${className}">
//     <img class="country__img" src="${data.flags.png}" />
//     <div class="country__data">
//       <h3 class="country__name">${data.name}</h3>
//       <h4 class="country__region">${data.region}</h4>
//       <p class="country__row"><span>üë´</span>${(+data.population / 1000000).toFixed(1) + "M"} people</p>
//       <p class="country__row"><span>üó£Ô∏è</span>${data.languages[0].name}</p>
//       <p class="country__row"><span>üí∞</span>${data.currencies[0].name}</p>
//     </div>
//   </article>`;

//     // console.log(html);
//     countriesContainer.insertAdjacentHTML('beforeend', html)
//     countriesContainer.style.opacity = 1;

// }

// ///////////////////////////////////////
// const getCountryAndNeighbour = function (country) {
//     const request = new XMLHttpRequest();// ‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Api ‡∏ï‡πà‡∏≤‡∏á‡πÜ
//     request.open('GET', `https://restcountries.com/v2/name/${country}`)
//     request.send();// ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
//     console.log("888", request.responseText); // ‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ß‡πà‡∏≤‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏¢‡∏±‡∏á ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏û‡∏≠‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô ‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á

//     request.addEventListener('load', function () { //load ‡∏Ñ‡∏∑‡∏≠‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡πá‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠ request ‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß
//         // console.log(this.responseText); //this ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á request
//         const [data] = JSON.parse(request.responseText); //[] ‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏ï‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á
//         console.log(data);
//         renderCountry(data);

//         const [neighbour] = data.borders; //‡πÄ‡∏≠‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á array
//         console.log(neighbour);
//         if (!neighbour) return;

//         //AJAX call country 2 ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ö‡πâ‡∏≤‡∏ô
//         const request2 = new XMLHttpRequest();
//         request2.open('GET', `https://restcountries.com/v2/alpha/${neighbour}`)
//         request2.send();
//         // callback hell ‡∏ã‡πâ‡∏≠‡∏ô‡∏Å‡∏±‡∏ô code ‡∏ô‡∏£‡∏Å‡∏™‡∏±‡∏™‡πÜ
//         request2.addEventListener('load', function () {
//             const data2 = JSON.parse(this.responseText)
//             console.log(data2);
//             renderCountry(data2, 'neighbour');
//         })
//     })
// }

// getCountryAndNeighbour('usa')// ‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö asynchrobos ‡∏ã‡∏∂‡πà‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡πÉ‡∏ô‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏≤‡∏≠‡∏±‡∏ô‡πÅ‡∏£‡∏Å‡∏¢‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à
// // getCountryData('usa')
// getCountryAndNeighbour('thai')

//=====================

// const request = fetch('https://restcountries.com/v2/name/usa')
// console.log(request);

// const getCountData = function (country) {
//     fetch(`https://restcountries.com/v2/name/${country}`).then(function (response) { //then ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏ï‡πà‡∏≠ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô function ‡∏Ñ‡∏∑‡∏≠ ‡∏ú‡∏•‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à
//         return response.json(); //joson ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö asycho ‡∏ï‡∏±‡πâ‡∏á‡∏ô‡πâ‡∏±‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ return ‡∏à‡∏∂‡∏á‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô promiss ‡∏≠‡∏µ‡∏Å‡∏£‡∏≠‡∏ö
//     }).then(function (data) {
//         console.log(data);
//         renderCountry(...data)
//     })

// }

// btn.addEventListener('click', function () {
//     getCountData('australia');
// });

//challenge 1
// const whereAmI = function (lat, lng) {
//     fetch(`https://geocode.xyz/${lat},${lng}?geoit=json`)
//         .then(response => {
//             // console.log(response);
//             return response.json()
//         })
//         .then(data => {
//             if (!data.country) {
//                 console.error("Something went wrong! 403 please wait");
//                 whereAmI(lat, lng);
//                 return;
//             }
//             console.log(`You are in ${data.city},${data.country}`);
//             return data.country;
//         }).then(conuntry => getCountry(conuntry))
//         .catch(err => console.error(`Something went wrong! ${err}`))

// }
// const getCountry = function (country) {
//     fetch(`https://restcountries.com/v2/name/${country}`)
//         .then(response => response.json())
//         .then(data => {
//             console.log(data[0])
//             gennerateCountry(data[0])
//         });
// }

// const gennerateCountry = function (data) {
//     const html = `
//     <article class="country">
//         <img class="country__img" src="${data.flags.png}" />
//         <div class="country__data">
//           <h3 class="country__name">${data.name}</h3>
//           <h4 class="country__region">${data.region}</h4>
//           <p class="country__row"><span>üë´</span>${(+data.population / 1000000).toFixed(1)}M</p>
//           <p class="country__row"><span>üó£Ô∏è</span>${data.languages[0].name}</p>
//           <p class="country__row"><span>üí∞</span>${data.currencies[0].name}</p>
//         </div>
//       </article>
//     `
//     countriesContainer.insertAdjacentHTML('beforeend', html)
//     countriesContainer.style.opacity = 1;
// }

// whereAmI(52.508, 13.381);
// whereAmI(19.037, 72.873);
// whereAmI(-33.933, 18.474);

// //mirotask tes=======================
// console.log('Test start'); //
// setTimeout(() => console.log('0 sec timer'), 0) //‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÑ‡∏î‡πâ‡πÑ‡∏õ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà callback queue
// Promise.resolve('Rsesolved promise 1').then(res => console.log(res))
// Promise.resolve('Resolved promise 2').then(res => { //‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á callback queue ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡πÑ‡∏õ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏™‡∏£‡πá‡∏à
//     for (let i = 0; i < 10000000000; i++) { }
//     console.log(res);
// })
// console.log('Test end'); //‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö sycronous  ‡∏à‡∏∂‡∏á‡∏ó‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô

// //Building a Simple Promise========

// const lotteryPromise = new Promise(function (resolve, reject) { // ‡πÉ‡∏ô promise ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏î‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏±‡∏ö‡∏≠‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤
//     console.log('Lotter drow is happening');
//     setTimeout(function () {
//         if (Math.random() >= 0.5) {
//             resolve('You WIN')
//         } else {
//             reject(new Error('You lost your money')); //‡∏ñ‡πâ‡∏≤‡πÉ‡∏™‡πà Error ‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏°‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÑ‡∏´‡∏ô
//         }
//     }, 2000)

// })

// lotteryPromise.then(res => console.log(res)).catch(err => console.error(err));

const wait = function (seconds) {
    return new Promise(function (response) {
        setTimeout(response, seconds * 1000);
    });
};
// //
// // ‡∏î‡∏π‡∏á‡πà‡∏≤‡∏¢‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏≥‡πÄ‡∏õ‡πá‡∏ô ‡πÇ‡∏Ñ‡∏ï‡∏û‡∏µ‡∏£‡∏∞‡∏°‡∏¥‡∏î‡πÅ‡∏ö‡∏ö setTimeOut
// wait(2)
//     .then(() => { // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ response‡∏Å‡πá‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏Å‡πá‡πÑ‡∏î‡πâ
//         console.log('I waited for 1 sec')
//         return wait(1); // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ return ‡∏à‡∏∞‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ chaining ‡πÑ‡∏î‡πâ‡πÉ‡∏ô promise
//     })
//     .then(() => {
//         console.log('I waited for 2 sec');
//         return wait(1);
//     })
//     .then(() => {
//         console.log('I waited for 3 sec');
//         return wait(1);
//     })
//     .then(() => {
//         console.log('I waited for 4 sec');
//         return wait(1);
//     })

// Promise.resolve('abc').then(res => console.log(res)) // ‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô
// Promise.reject(new Error('Is Problem')).catch(res => console.error(res)) // ‡∏Ñ‡∏±‡πà‡∏ß‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏°

//Gelocation======================================

// const whereAmIV2 = function () { // ‡πÉ‡∏ä‡πâ gelocation
//     getPosition().then(pos => {
//         const { latitude: lat, longitude: lng } = pos.coords; //‡πÅ‡∏ó‡∏ô‡∏Ñ‡πà‡∏≤‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÇ‡∏î‡∏¢‡πÄ‡∏≠‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏≤‡∏à‡∏≤‡∏Å Object; // ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏õ‡∏µ‡∏Å‡∏Å‡∏≤‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ = ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
//         console.log(lat, lng);
//         return fetch(`https://geocode.xyz/${lat},${lng}?geoit=json`) // ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡∏≠‡∏±‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏•‡πà‡∏≤‡∏á
//     })
//         .then(response => {
//             // console.log(response);
//             return response.json()
//         })
//         .then(data => {
//             if (!data.country) {
//                 console.error(new Error("Something went wrong! 403 please wait"));
//                 whereAmIV2();
//                 return;
//             }
//             console.log(`You are in ${data.city},${data.country}`);
//             return data.country;
//         }).then(conuntry => getCountry(conuntry))
//         .catch(err => console.error(`Something went wrong! ${err}`))

// }
// const getPosition = function () {
//     return new Promise(function (resolve, reject) {
//         navigator.geolocation.getCurrentPosition(resolve, reject);
//     })
// }
// const getCountry = function (country) {
//     fetch(`https://restcountries.com/v2/name/${country}`)
//         .then(response => response.json())
//         .then(data => {
//             console.log(data[0])
//             gennerateCountry(data[0])
//         });
// }
// const gennerateCountry = function (data) {
//     const html = `
//     <article class="country">
//         <img class="country__img" src="${data.flags.png}" />
//         <div class="country__data">
//           <h3 class="country__name">${data.name}</h3>
//           <h4 class="country__region">${data.region}</h4>
//           <p class="country__row"><span>üë´</span>${(+data.population / 1000000).toFixed(1)}M</p>
//           <p class="country__row"><span>üó£Ô∏è</span>${data.languages[0].name}</p>
//           <p class="country__row"><span>üí∞</span>${data.currencies[0].name}</p>
//         </div>
//       </article>
//     `
//     countriesContainer.insertAdjacentHTML('beforeend', html)
//     countriesContainer.style.opacity = 1;
// }

// getPosition().then(pos => console.log(pos));
// btn.addEventListener('click', whereAmIV2())

//====================================================
//Challeng 2
// const img = document.querySelector('.images');
// const createImage = function (imgPath) {
//     return new Promise(function (resolve, reject) {
//         const addImage = document.createElement('img')
//         addImage.src = imgPath
//         addImage.addEventListener('load', () => resolve(addImage)) // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏£‡∏ñ‡∏Å‡πà‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏á‡∏±‡πâ‡∏ô‡∏°‡∏±‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏†‡∏≤‡∏û‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡πÑ‡∏õ‡πÄ‡∏•‡∏¢
//         addImage.addEventListener('error', () => reject(`Image path:${imgPath} not found`)) // ‡πÑ‡∏ß‡πâ‡∏´‡∏≤‡∏ï‡∏≠‡∏ô‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡πÇ‡∏´‡∏•‡∏î
//     })
//         .then(response => {
//             img.append(response)
//             return wait(2).then(() => response);
//         })

//         .then(res => {
//             res.style.display = 'none'
//             console.log('end');
//             return wait(2).then(() => res)
//         }).catch(err => console.error(new Error(err)))
// }

// createImage('img/img-1.jpg').then(() => createImage('img/img-2.jpg')).then(() => createImage('img/img-3.jpg'));
//====================================================
const renderCountry = function (data, className = '') {
    const html = ` 
    <article class="country ${className}">
    <img class="country__img" src="${data.flags.png}" />
    <div class="country__data">
      <h3 class="country__name">${data.name}</h3>
      <h4 class="country__region">${data.region}</h4>
      <p class="country__row"><span>üë´</span>${(+data.population / 1000000).toFixed(1) + 'M'
        } people</p>
      <p class="country__row"><span>üó£Ô∏è</span>${data.languages[0].name}</p>
      <p class="country__row"><span>üí∞</span>${data.currencies[0].name}</p>
    </div>
  </article>`;

    // console.log(html);
    countriesContainer.insertAdjacentHTML('beforeend', html);
    countriesContainer.style.opacity = 1;
};
const getPosition = function () {
    return new Promise(function (resolve, reject) {
        navigator.geolocation.getCurrentPosition(resolve, reject);
    });
};
// try catch ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ catch ‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏≤‡∏à‡∏∂‡∏á‡∏´‡∏±‡∏ô‡∏°‡∏≤‡πÉ‡∏ä‡πâ try catch ‡πÅ‡∏ó‡∏ô

const renderError = function (mag) {
    countriesContainer.insertAdjacentText('beforeend', mag); // ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö‡∏≠‡∏¥‡∏ô‡πÄ‡∏™‡∏¥‡∏ä‡πÅ‡∏ï‡πà‡∏ß‡πà‡∏≤‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ‡πÄ‡∏≠‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏Ñ‡πà‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏¢‡∏±‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÄ‡∏•‡∏¢
    // countriesContainer.style.opacity = 1;
    // throw new Error(mag);
};
const getJSON = function (url, errMsg = 'Something went wrong') {
    return fetch(url).then(response => {
        // ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡∏ñ‡πâ‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ function ‡∏Ç‡∏≠‡∏á then ‡πÑ‡∏î‡πâ
        if (!response.ok) throw new Error(`${errMsg} (${response.status})`);
        return response.json();
    });
};
const whereAMI = async function () {
    try {
        //‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πâ‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏á‡∏±‡πà‡∏ô‡πÑ‡∏°‡πà‡∏Ç‡∏ß‡∏≤‡∏á call stack ‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô
        const pos = await getPosition();
        const { latitude: lat, longitude: lng } = pos.coords;
        const resGeo = await fetch(`https://geocode.xyz/${lat},${lng}?geoit=json`);
        if (!resGeo.ok) throw new Error(`Problem getting location data`);
        const dataGeo = await resGeo.json();
        console.log(dataGeo);

        const res = await fetch(
            `https://restcountries.com/v2/name/${dataGeo.country}`
        ); //‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∏‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏à‡∏∞‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏™‡∏£‡πá‡∏Å‡∏Ñ‡πà‡∏≠‡∏¢‡πÑ‡∏õ‡∏ï‡πà‡∏≠
        if (!dataGeo.country) throw new Error('Geocode was worngüí•');
        // console.log(res); // ‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå respones ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏≤‡∏Å‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πä‡∏î‡∏Å‡∏£‡∏ì‡∏µ‡∏ô‡∏µ‡πâ
        const data = await res.json(); // ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß json
        // console.log(data);
        renderCountry(data[0]);
        return `You are in ${dataGeo.city}, ${dataGeo.country}`; // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î return ‡∏õ‡∏Å‡∏ï‡∏¥‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ ‡πÄ‡∏õ‡πá‡∏ô promise ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà
    } catch (err) {
        console.error(`${err} üí•`);
        renderError(`Something went wrong üí•  ${err.message}`);
        throw err; // ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà error ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡πÇ‡∏¢‡∏ô‡πÑ‡∏õ catch ‡∏ï‡πà‡∏≠‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ
    }
};

console.log(`1: Will get location`);
// ‡∏û‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Ç‡πâ‡∏≤‡∏á‡∏ô‡∏≠‡∏Å‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£ return ‡∏Ñ‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏ñ‡∏∂‡∏á‡πÅ‡∏°‡πâ‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î Error ‡∏Ç‡∏∂‡πâ‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ï‡πà‡∏°‡∏±‡∏ô‡∏Å‡πá‡∏à‡∏∞ return ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô undifind ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏ï‡∏±‡∏ß‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ô‡∏±‡πâ‡∏ô‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ
// ‡∏õ‡∏¥‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡∏ö‡∏ú‡∏™‡∏° ‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡∏∞‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà=============================================
// const city = whereAMI();
// console.log(city);//Promise
// whereAMI()
//     .then(city => console.log(`2: ${city}`))
//     .catch(err => console.error(`2: ${err}`))
//     .finally(() => console.log(`3: Will get location`));//‡πÉ‡∏ä‡πâ then ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ return ‡∏à‡∏≤‡∏Å ascy
// // ‡πÄ‡∏≠‡∏≠‡πÄ‡∏£‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏à‡∏≤‡∏Å throw err ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏°‡∏≤‡∏ó‡∏µ‡πà catch

//async ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà=======================================
// (async function () {
//     // ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å try catch ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô function ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∂‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö IEFF ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô run ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô ‡∏à‡∏∂‡∏á‡∏Ñ‡πà‡∏≠‡∏¢‡πÉ‡∏ä‡πâ await ‡πÅ‡∏•‡∏∞try catch
//     try {
//         const city = await whereAMI();
//         console.log(`2: ${city}`);
//         //‡πÉ‡∏ä‡πâ then ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ return ‡∏à‡∏≤‡∏Å ascy
//     } catch (err) {
//         console.error(`2: ${err}`);
//     }
//     console.log(`3: Will get location`);
// })();

//=======================
// const get3Countries = async function (c1, c2, c3) {
//     try {
//         // ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡πÅ‡∏ö‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡πÅ‡∏ö‡∏ö sequne  ‡∏ã‡∏∂‡πà‡∏á‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
//         const [data1] = await getJSON(
//             `https://restcountries.com/v2/name/${c1}`
//         )
//         const [data2] = await getJSON(
//             `https://restcountries.com/v2/name/${c2}`
//         )
//         const [data3] = await getJSON(
//             `https://restcountries.com/v2/name/${c3}`
//         )

//         const datas = await Promise.all([ // ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö parallel
//             getJSON(`https://restcountries.com/v2/name/${c1}`),
//             getJSON(`https://restcountries.com/v2/name/${c2}`),
//             getJSON(`https://restcountries.com/v2/name/${c3}`),
//         ])
//         console.log();
//         // datas.forEach(([data]) => console.log(data.capital))
//         console.log(datas.map(d => d[0].capital))
//         // console.log(data1.capital, data2.capital, data3.capital);

//     } catch (err) {
//         console.error(err);

//     }
// }

// get3Countries('usa', 'thai', 'canada')


//======================== Promise.race // ‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏Å‡∏±‡∏ô ‡∏ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡πÑ‡∏´‡∏ô‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô‡∏°‡∏±‡∏ô‡∏à‡∏∞‡πÄ‡∏≠‡∏≤‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏õ ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏∑‡πà‡∏ô‡∏Å‡πá‡∏õ‡∏±‡∏î‡∏ó‡∏¥‡πâ‡∏á 
// const timeout = function (sec) {
//     return new Promise(function (_, reject) {
//         setTimeout(function () {
//             reject(new Error("Request took too long"))
//         }, sec * 1000)
//     })
// }

// Promise.race([ // ‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÇ‡∏´‡∏•‡∏î‡∏ô‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡πÑ‡∏°‡πà‡∏î‡∏µ‡∏Å‡πá‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏î‡∏ó‡∏¥‡πâ‡∏á‡πÑ‡∏õ‡πÄ‡∏•‡∏¢
//     getJSON(`https://restcountries.com/v2/name/thai`),
//     timeout(1)
// ]).then(res => console.log(res[0])).catch(err => console.err(err))

// //======================= Promise.allSettled
// Promise.allSettled([ // ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡∏°‡πà‡∏Ç‡∏≠‡∏á es2020 ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤ promise ‡πà‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡∏°‡∏±‡∏ô‡∏Å‡πá‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô array
//     Promise.resolve('Sucess'),
//     Promise.reject('Error'),
//     Promise.resolve('Sucess')
// ]).then(res => console.log(res)).catch((err) => console.error(err)) // ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á catch ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô

// Promise.all([ // ‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡∏ô‡∏µ‡πâ‡∏û‡∏µ‡πà‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏°‡∏±‡∏ô‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏î‡πâ‡∏á‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏•‡∏±‡∏î‡∏ß‡∏á‡∏à‡∏£
//     Promise.resolve('Sucess'),
//     Promise.reject('Error'),
//     Promise.resolve('Sucess')
// ]).then(res => console.log(res)).catch((err) => console.error(err))

// //======================= Promise.any

// Promise.any([ // ‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡∏ô‡∏µ‡πâ‡∏û‡∏µ‡πà‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏°‡∏±‡∏ô‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏î‡πâ‡∏á‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏•‡∏±‡∏î‡∏ß‡∏á‡∏à‡∏£
//     Promise.resolve('Sucess'),
//     Promise.reject('Error'),
//     Promise.resolve('another Sucess')
// ]).then(res => console.log(res)).catch((err) => console.log(err))

//Challeng 3

const imgContainer = document.querySelector('.images');

const createImage = function (imgPath) {
    return new Promise(function (resolve, reject) {
        const img = document.createElement('img');
        img.src = imgPath;

        img.addEventListener('load', function () {
            imgContainer.append(img);
            resolve(img);
        });

        img.addEventListener('error', function () {
            reject(new Error('Image not found'));
        });
    });
};

let currentImg;
// ‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤
// createImage('img/img-1.jpg')
//     .then(img => {
//         currentImg = img;
//         console.log('Image 1 loaded');
//         return wait(2);
//     })
//     .then(() => {
//         currentImg.style.display = 'none';
//         return createImage('img/img-2.jpg');
//     })
//     .then(img => {
//         currentImg = img;
//         console.log('Image 2 loaded');
//         return wait(2);
//     })
//     .then(() => {
//         currentImg.style.display = 'none';
//     })
//     .catch(err => console.error(err));

// ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà
const loadNPeuse = async function () {
    try {
        let currentImg
        currentImg = await createImage('img/img-1.jpg')
        console.log('Image 1 loaded');
        await wait(2)
        currentImg.style.display = 'none'
        await wait(2)

        currentImg = await createImage('img/img-2.jpg')
        console.log('Image 2 loaded');
        await wait(2)
        currentImg.style.display = 'none'
        await wait(2)

        currentImg = await createImage('img/img-3.jpg')
        console.log('Image 3 loaded');
        await wait(2)
        currentImg.style.display = 'none'
        await wait(2)

    } catch (err) {
        console.error(err);
    }
}
// loadNPeuse();

const loadAll = async function (imgArr) {
    const imgs = imgArr.map(img => createImage(img))
    console.log(imgs);
    const all = await Promise.all(imgs)
    all.forEach(img => img.classList.add('parallel'))

}

loadAll(['img/img-1.jpg', 'img/img-2.jpg', 'img/img-3.jpg'])