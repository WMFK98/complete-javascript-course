
const budget = Object.freeze([
  { value: 250, description: 'Sold old TV üì∫', user: 'jonas' },
  { value: -45, description: 'Groceries ü•ë', user: 'jonas' },
  { value: 3500, description: 'Monthly salary üë©‚Äçüíª', user: 'jonas' },
  { value: 300, description: 'Freelancing üë©‚Äçüíª', user: 'jonas' },
  { value: -1100, description: 'New iPhone üì±', user: 'jonas' },
  { value: -20, description: 'Candy üç≠', user: 'matilda' },
  { value: -125, description: 'Toys üöÇ', user: 'matilda' },
  { value: -1800, description: 'New Laptop üíª', user: 'jonas' },
]);

const spendingLimits = Object.freeze({
  jonas: 1500,
  matilda: 100,
}); //freeze ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏î‡πâ‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤
//‡πÅ‡∏ï‡πà‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö deep ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà
getLimit = (limit, user) => limit?.[user] ?? 0;

//pure function
const addExpense = function (state, limits, value, description, user = 'jonas') { // ‡∏ó‡∏≤‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏Å‡∏¥‡∏ô‡∏™‡∏≤‡∏° ‡πÅ‡∏ï‡πà‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Å‡∏£‡∏ì‡∏µ‡∏û‡∏¥‡πÄ‡∏®‡∏© 
  // ‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏á‡πÅ‡∏õi state , limits ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ß‡πà‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏ß‡∏Å‡∏ô‡∏µ‡πâ ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡πä‡∏≠‡∏õ‡∏õ‡∏µ‡πâ‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡∏ß‡∏≤‡∏á‡∏ó‡∏±‡∏ö‡πÅ‡∏ó‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏£‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ sideEffect 
  const cleanUser = user.toLowerCase(); // ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£muittand ‡∏ô‡πà‡∏∞‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏´‡∏°‡πà

  // let lim = getLimit(user)


  return value <= getLimit(limits, user) ? [...state, { value: -value, description, user: cleanUser }] : state // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏û‡∏≠‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏∞‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏õ
  // budget.push({ value: -value, description, user:cleanUser });
}

const b1 = addExpense(budget, spendingLimits, 10, 'Pizza üçï');
addExpense(budget, spendingLimits, 100, 'Going to movies üçø', 'Matilda');
addExpense(budget, spendingLimits, 200, 'Stuff', 'Jay');
console.log(budget);


const checkBudget2 = function (state, limits) {
  return state.map(entry => entry.value < -getLimit(limits) ? { ...entry, flag: 'limit' } : entry);


  // for (const entry of budget) {

  //   if (entry.value < -getLimit(entry.user)) {
  //     entry.flag = 'limit';
  //   }
  // }
};

const checkBudget = (state, limits) =>
  state.map(entry => entry.value < -getLimit(limits) ? { ...entry, flag: 'limit' } : entry);

console.log(b1);
console.log("V");
console.log(checkBudget(b1, spendingLimits));

console.log(budget);

const logBigExpenses = (limit, state) => state
  .filter(entry => entry.value <= -limit)
  // .map(entry => entry.description.slice(-2))
  // .join(" / ");
  .reduce((str, cur) => `${str} / ${cur.description.slice(-2)}`, '')

// let output = '';
// for (const entry of budget) {
//   if (entry.value <= -limit) {
//     output += `${entry.description.slice(-2)} / `; // Emojis are 2 chars
//   }
// }
// output = output.slice(0, -2); // Remove last '/ '
// console.log(output);
const l1 = logBigExpenses(1000, b1)
console.log(l1);

